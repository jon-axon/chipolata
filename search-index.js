var searchIndex = JSON.parse('{\
"chipolata":{"doc":"","t":[17,13,13,3,13,13,3,4,4,13,13,13,13,13,3,13,13,13,13,3,13,13,3,4,3,13,13,13,3,13,4,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["COSMAC_VIP_PROCESSOR_SPEED_HERTZ","Chip48","Chip8","ChipolataError","Completed","Crashed","Display","EmulationLevel","ErrorDetail","Extended","ExtendedSnapshot","FileError","Initialised","InvalidKey","Memory","MemoryAddressOutOfBounds","Minimal","MinimalSnapshot","OperandsOutOfBounds","Options","Paused","PopEmptyStack","Processor","ProcessorStatus","Program","ProgramLoaded","PushFullStack","Running","Stack","StartingUp","StateSnapshot","StateSnapshotVerbosity","StateTransitionError","SuperChip11","UnimplementedInstruction","UnknownError","UnknownInstruction","WaitingForKeypress","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","emulation_level","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","execute_cycle","export_state_snapshot","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font_start_address","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","get_column_size_pixels","get_row_size_bytes","index","index_mut","init","init","init","init","init","init","init","init","init","init","init","init","initialise_and_load","inner_error","into","into","into","into","into","into","into","into","into","into","into","into","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","load_from_file","load_from_file","max_addressable_size","max_stack_size","new","new","pause_execution","pointer","pop","processor_speed","processor_speed_hertz","program_data","program_start_address","provide","provide","push","read_byte","read_bytes","read_two_bytes","resume_execution","save_to_file","save_to_file","serialize","serialize","set_key_status","set_processor_speed","set_program_data","sound_timer_active","state_snapshot_dump","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","memory_limit_2k","octo_compatibility_mode","variable_cycle_timing","address","file_path","key","new_state","old_state","opcode","opcode","operands","cycles","cycles","delay_timer","emulation_level","frame_buffer","frame_buffer","high_resolution_mode","index_register","memory","play_sound","play_sound","processor_speed","processor_speed","program_counter","rpl_registers","sound_timer","stack","status","status","variable_registers"],"q":["chipolatachipolata::EmulationLevel","","","chipolata::ErrorDetail","","","","","","","","chipolata::StateSnapshot","","","","","","","","","","","","","","","","","","",""],"d":["The original COSMAC VIP processor speed in hertz.  When …","Re-implemented CHIP-8 interpreter for the HP48 graphing …","The original CHIP-8 interpreter for the RCA COSMAC VIP, …","An Error struct used to bubble up Chipolata errors to the …","Execution completed (program exited); SUPER-CHIP emulation …","The processor is in an error state, having generated an …","An abstraction of the CHIP-8 frame buffer.","An enum to indicate which extension of CHIP-8 is to be …","An Error enum used throughout the Chipolata crate to …","The frame buffer, registers, stack and memory state will …","Extended snapshot containing the minimal state along with …","Error used for any file I/O issues","The processor has been instantiated and font data loaded","A key ordinal was referenced that is outside the valid …","An abstraction of the CHIP-8 memory space.","An attempt was made to read/write from an address outside …","Only the frame buffer state will be reported","Minimal snapshot containing only the frame buffer state, …","One or more operands fall outside expected ranges and …","A struct to allow specification of Chipolata start-up …","Execution paused (by host)","An attempt was made to pop an item off the Chipolata stack …","An abstraction of the CHIP-8 processor, and the core …","An enum used internally within the Chipolata crate to keep …","An abstraction of a CHIP-8 ROM, ready for loading into the …","A program has been loaded into the processor’s memory","An attempt was made to push an item on to the Chipolata …","The program is being executed (the decode-&gt;fetch-&gt;execute …","An abstraction of the CHIP-8 stack, used for holding …","The processor has been instantiated but memory is empty","An enum with variants representing the different Chipolata …","An enum used to indicate which variant of StateSnapshot …","Error causes by invalid processor state transition","Version 1.1 of the SUPER-CHIP interpreter for HP48S and …","A valid opcode was read from memory but which is not …","General bucket for any unknown issues (to return <em>something</em> …","An unrecognised opcode was read from memory","The processor is stalled waiting for a keypress …","","","","","","","","","","","","","","","","","","","","","","","","","A stack-allocated array of bytes representing the entire …","A stack-allocated array of 16-bit values representing the …","","","","","","","","","","","","","Constructor that returns an Options instance using typical …","Constructor that returns an empty Program instance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specification of the variant of CHIP-8 to emulate.","","","","","","","","","","","Executes one iteration of the Chipolata fetch -&gt; decode -&gt; …","Returns a copy of the current state of Chipolata.","","","Returns a textual description of each enum variant for …","Returns a textual description of the error","","","","","","","","","The location into memory at which the system font should …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Getter that returns the display column size in pixels","Getter that returns the display row size in bytes","","","","","","","","","","","","","","","Constructor/builder function that returns a …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Builder method that instantiates Options from the …","Builder method that instantiates Program from the …","Returns the size of the addressable memory space in bytes","Returns the maximum permitted stack size (number of …","Typical constructor that allows specification of processor …","Constructor that returns a Program instance representing …","Sets the processor to a paused state (no cycles will …","A pointer to the current top of the stack (i.e. the next …","Pops the top entry off the stack and returns it.  If the …","Returns the current processor speed in hertz","The number of complete fetch-&gt;decode-&gt;execute cycles …","Returns a reference to the program data held in this …","The location into memory at which the program should be …","","","Pushes the specified 16-bit value on to the top of the …","Returns a copy of the byte in memory at the specified …","Returns an array slice from memory as per the specified …","Returns a 16-bit unsigned integer constructed by reading …","Sets the processor to a running state, if paused","Method that serialises the passed Options instance to the …","Method that serialises the passed Program instance to the …","","","Provides key press input to Chipolata, by setting the …","Sets the current processor speed in hertz","Sets the program data as per the specified byte vector.","Returns true if the sound timer is active i.e. if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,4,4,0,5,5,0,0,0,15,13,11,5,11,0,11,15,13,11,0,5,11,0,0,0,5,11,5,0,5,0,0,11,4,11,11,11,5,15,14,1,11,12,2,3,4,5,13,7,6,15,14,1,11,12,2,3,4,5,13,7,6,2,6,1,2,3,4,5,6,1,2,3,4,5,6,3,7,15,14,1,11,12,2,3,4,5,13,7,6,15,14,1,11,12,2,3,4,5,13,7,6,3,4,15,14,1,11,12,2,3,4,5,13,7,6,3,1,11,12,2,3,4,5,13,7,6,14,14,1,11,11,12,12,2,3,4,5,13,7,6,3,15,14,1,11,12,2,3,4,5,13,7,6,15,14,1,11,12,2,3,4,5,13,7,6,1,1,1,1,15,14,1,11,12,2,3,4,5,13,7,6,14,12,15,14,1,11,12,2,3,4,5,13,7,6,15,14,1,11,12,2,3,4,5,13,7,6,3,7,2,6,3,7,14,6,6,14,3,7,3,11,12,6,2,2,2,14,3,7,3,4,14,14,7,14,12,1,2,3,4,5,6,15,14,1,11,12,2,3,4,5,13,7,6,11,12,15,14,1,11,12,2,3,4,5,13,7,6,15,14,1,11,12,2,3,4,5,13,7,6,15,14,1,11,12,2,3,4,5,13,7,6,15,14,1,11,12,2,3,4,5,13,7,6,26,27,26,28,29,30,31,31,32,33,34,35,36,36,36,35,36,36,36,36,35,36,35,36,36,36,36,36,35,36,36],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],7],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[[],[[9,[3]]]],[[],[[9,[4]]]],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],0,[[1,1],10],[[11,11],10],[[12,12],10],[[2,2],10],[[3,3],10],[[4,4],10],[[5,5],10],[[13,13],10],[[7,7],10],[[6,6],10],[14,[[9,[10,12]]]],[[14,15],13],[[1,16],17],[[11,16],17],[[11,16],17],[[12,16],17],[[12,16],17],[[2,16],17],[[3,16],17],[[4,16],17],[[5,16],17],[[13,16],17],[[7,16],17],[[6,16],17],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,8],[1,8],[[1,8]],[[1,8]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[7,3],[[9,[14,12]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,[[9,[3,11]]]],[18,[[9,[7,11]]]],[2,8],[6,8],[[19,4],3],[[[21,[20]]],7],[14,[[9,[12]]]],0,[6,[[9,[22,11]]]],[14,19],0,[7,21],0,[23],[23],[[6,22],[[9,[11]]]],[[2,8],[[9,[20,11]]]],[[2,8,8],[[9,[11]]]],[[2,8],[[9,[22,11]]]],[14,[[9,[12]]]],[[3,18],[[9,[11]]]],[[7,18],[[9,[11]]]],[3,9],[4,9],[[14,20,10],[[9,[12]]]],[[14,19]],[[7,[21,[20]]],[[9,[11]]]],[14,10],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Display"],[3,"Memory"],[3,"Options"],[4,"EmulationLevel"],[4,"ProcessorStatus"],[3,"Stack"],[3,"Program"],[15,"usize"],[4,"Result"],[15,"bool"],[4,"ErrorDetail"],[3,"ChipolataError"],[4,"StateSnapshot"],[3,"Processor"],[4,"StateSnapshotVerbosity"],[3,"Formatter"],[6,"Result"],[3,"Path"],[15,"u64"],[15,"u8"],[3,"Vec"],[15,"u16"],[3,"Demand"],[3,"String"],[3,"TypeId"],[13,"Chip8"],[13,"SuperChip11"],[13,"MemoryAddressOutOfBounds"],[13,"FileError"],[13,"InvalidKey"],[13,"StateTransitionError"],[13,"UnknownInstruction"],[13,"UnimplementedInstruction"],[13,"OperandsOutOfBounds"],[13,"MinimalSnapshot"],[13,"ExtendedSnapshot"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
